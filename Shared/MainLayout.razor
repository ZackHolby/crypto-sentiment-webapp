@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Mvc.Rendering;
@using crypto_sentiment.Data
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@using crypto_sentiment.Models;
@inject CryptoDbService cryptoDbService
@inject TweetAPIService tweetAPIservice
@inject Microsoft.EntityFrameworkCore.IDbContextFactory<CryptoDbContext> contextFactory;
@inject NavigationManager NavigationManager
@using Radzen
@using Radzen.Blazor


@if (searchList == null){
    <div class="center">
        <p>Loading your content...</p>
        <div class="spinner-border text-dark"></div>
    </div>
    
}
else{
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <div class="main">
            
            <div class="top-row px-4">
                <MudThemeProvider/>
                <MudDialogProvider/>
                <MudSnackbarProvider/>
                <MudItem xs="12" sm="6" md="4">
                    <MudAutocomplete T="string" Label="Ex. Bitcoin, Ethereum..." @bind-Value="searchTerm" SearchFunc="@SearchCryptoList" 
                    ResetValueOnEmptyText="true" CoerceText="true"  CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" OnAdornmentClick="SearchForCrypto"/>
                </MudItem>
            </div>

            

            <div class="content px-4">
                @Body
            </div>
        </div>
    </div>
}


@code {

    [Parameter]    
    public string searchTerm {get;set;}

    public CryptoData searchedData;

    private string[] searchList = {"aave","algorand","amp","ankr","avalanche","axie-infinity","bakerytoken","bancor","basic-attention-token","binance-coin",
    "binance-usd","bitcoin","bitcoin-bep2","bitcoin-cash","bitcoin-gold","bitcoin-sv","bittorrent","cardano","celo","celsius","chainlink","chiliz","compound",
    "cosmos","crypto-com-coin","curve-dao-token","dash","decentraland","decred","digibyte","dogecoin","elrond-egld","enjin-coin","eos","ethereum","ethereum-classic",
    "fantom","filecoin","flow","ftx-token","harmony","hedera-hashgraph","helium","holo","horizen","huobi-token","husd","icon","internet-computer","iota","klaytn","kucoin-token",
    "kusama","litecoin","maker","mdex","mobilego","monero","multi-collateral-dai","nano","near-protocol","nem","neo","nexo","okb","omg","ontology","pancakeswap","paxos-standard",
    "polkadot-new","polygon","qtum","quant","ravencoin","revain","shiba-inu","siacoin","solana","stacks","stellar","sushiswap","swissborg","synthetix-network-token","telcoin","terra-luna",
    "terrausd","tether","tezos","the-graph","the-sandbox","theta","theta-fuel","thorchain","tron","trueusd","uma","uniswap","unus-sed-leo","usd-coin","vechain","voyager-token","waves","wrapped-bitcoin",
    "xinfin-network","xrp","yearn-finance","zcash","zilliqa"};




    private async Task<IEnumerable<string>> SearchCryptoList(string value)
    {
         await Task.Delay(5);
        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        return searchList.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    void SearchForCrypto()
    {

        NavigationManager.NavigateTo("/crypto/" + searchTerm,true);
        
        Console.WriteLine("Called func with searchterm: "+searchTerm);
    }



}
