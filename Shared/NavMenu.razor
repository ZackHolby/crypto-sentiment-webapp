@inherits LayoutComponentBase
@using crypto_sentiment.Data
@using System.Linq;
@using crypto_sentiment.Models;
@using crypto_sentiment.Shared
@inject CryptoDbService cryptoDbService
@inject TweetAPIService tweetAPIservice
@inject Microsoft.EntityFrameworkCore.IDbContextFactory<CryptoDbContext> contextFactory;
@inject NavigationManager NavigationManager
@using Radzen


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Crypto Sentiment</a>
        
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true" ></span> Home
            </NavLink>
        </li>
        <br />
        <br />
        <li class="nav-item px-3">
            <h3 class="popular">Popular Cryptos</h3>
        </li>
            
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="crypto/bitcoin" @onclick='(() => SearchForCryptoRef("bitcoin"))'>
                <span class="oi oi-minus" aria-hidden="true"></span> Bitcoin
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="crypto/ethereum" @onclick='(() => SearchForCryptoRef("ethereum"))'>
                <span class="oi oi-minus" aria-hidden="true"></span> Ethereum
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="crypto/link" @onclick='(() => SearchForCryptoRef("chainlink"))'>
                <span class="oi oi-minus" aria-hidden="true" ></span> ChainLink
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="crypto/doge" @onclick='(() => SearchForCryptoRef("dogecoin"))'>
                <span class="oi oi-minus" aria-hidden="true"></span> Doge
            </NavLink>
        </li>


        <div class="collapsedSearchbar">
            <MudItem xs="10" sm="8" md="4">
                <MudAutocomplete Class="auto-search" T="string" Label="Ex. Bitcoin, Ethereum..." @bind-Value="searchTerm" SearchFunc="@SearchCryptoList" 
                ResetValueOnEmptyText="true" CoerceText="true"  CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" OnAdornmentClick="SearchForCrypto" Style="color:white !important" />
            </MudItem>
        </div>
        
        

    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    [Parameter]
    public string searchTerm { get; set; }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;


     private string[] searchList = {};


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

     void SearchForCrypto()
    {
        NavigationManager.NavigateTo("/crypto/" + searchTerm,true);
        
        Console.WriteLine("Called func");
    }

    void SearchForCryptoRef(string refString)
    {
        NavigationManager.NavigateTo("/crypto/" + refString,true);
        
        Console.WriteLine("Called func");
    }

    private async Task<IEnumerable<string>> SearchCryptoList(string value)
    {
         await Task.Delay(5);
        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        return searchList.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }



}
