@page "/home"

@using crypto_sentiment.Data
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@using crypto_sentiment.Models;
@inject CryptoDbService cryptoDbService
@inject TweetAPIService tweetAPIservice
@inject Microsoft.EntityFrameworkCore.IDbContextFactory<CryptoDbContext> contextFactory;


@if (topList == null)
{
    <div class="spinner-border text-dark"></div>
}
else
{
    <input type="text" @bind="searchTerm" />
    <p>
        <code>search</code>: @searchTerm
    </p>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>CryptoID</th>
                <th>Symbol</th>
                <th>Current Price</th>
                <th>Market Cap</th>
                <th>Slug</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cryptoData in topList)
            {
                <tr>
                    <td>@cryptoData.date.ToShortDateString()</td>
                    <td>@cryptoData.cryptoID</td>
                    <td>@cryptoData.symbol</td>
                    <td>@cryptoData.currPrice</td>
                    <td>@cryptoData.marketCap</td>
                    <td>@cryptoData.slug</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    private List<CryptoData> topList;
    private string searchTerm {get;set;}

    protected override async Task OnInitializedAsync()
    {
        using (var context = contextFactory.CreateDbContext())
        {
            topList= await context.Currencies.OrderByDescending(s => s.currPrice).Take(5).ToListAsync();
        }
                
        Console.WriteLine(topList.Count);

    }




}
