// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crypto_sentiment.Models;

namespace crypto_sentiment.Migrations
{
    [DbContext(typeof(CryptoDbContext))]
    partial class CryptoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("crypto_sentiment.Models.CryptoData", b =>
                {
                    b.Property<string>("cryptoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("currPrice")
                        .HasColumnType("int");

                    b.Property<int>("currencyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<long>("market_cap")
                        .HasColumnType("bigint");

                    b.Property<string>("slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cryptoID");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            cryptoID = "6a834a16-ff87-41ac-80a1-45dd01c14cd1",
                            currPrice = 1000,
                            currencyID = 1,
                            date = new DateTime(2021, 5, 22, 17, 2, 27, 523, DateTimeKind.Local).AddTicks(6957),
                            market_cap = 10L,
                            slug = "Bitcoin",
                            symbol = "BTC"
                        },
                        new
                        {
                            cryptoID = "79715810-eb30-4326-ad4f-edb3a83a0b84",
                            currPrice = 2000,
                            currencyID = 2,
                            date = new DateTime(2021, 5, 22, 17, 2, 27, 527, DateTimeKind.Local).AddTicks(3236),
                            market_cap = 20L,
                            slug = "Ethereum",
                            symbol = "ETH"
                        },
                        new
                        {
                            cryptoID = "ce57ec07-b889-417e-a525-91c5a92142ca",
                            currPrice = 3000,
                            currencyID = 3,
                            date = new DateTime(2021, 5, 22, 17, 2, 27, 527, DateTimeKind.Local).AddTicks(3291),
                            market_cap = 30L,
                            slug = "Cardano",
                            symbol = "ADA"
                        },
                        new
                        {
                            cryptoID = "62f3656b-4ae3-4d1b-aab9-075cb47d13b8",
                            currPrice = 4000,
                            currencyID = 4,
                            date = new DateTime(2021, 5, 22, 17, 2, 27, 527, DateTimeKind.Local).AddTicks(3298),
                            market_cap = 40L,
                            slug = "Chainlink",
                            symbol = "LINK"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
